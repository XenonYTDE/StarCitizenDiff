{
  "_RecordName_": "MissionBrokerEntry.KillAndCollectAnimals",
  "_RecordId_": "6d792486-1c98-42fc-850b-f588fe4dcf89",
  "_RecordValue_": {
    "_Type_": "MissionBrokerEntry",
    "notForRelease": true,
    "owner": "file://./../../../../../../../libs/foundry/records/devowners/developers/mft/maxsoutherton.json",
    "missionModule": "Libs/Subsumption/Missions/PU/JobBoardMissions/AnimalMissions/KillAndCollectAnimals/KillAndCollect_Kopion.xml",
    "playerFacingDebugName": "",
    "title": "@killcollectkopion_title",
    "titleHUD": "@LOC_UNINITIALIZED",
    "description": "@killcollectkopion_desc",
    "missionGiver": "@mtps_from",
    "commsChannelName": "@LOC_UNINITIALIZED",
    "type": "file://./../../../../../../../libs/foundry/records/missiontype/pu/mercenary.json",
    "associatedMissions": [],
    "missionDifficulty": -1,
    "localityAvailable": null,
    "locationMissionAvailable": "file://./../../../../../../../libs/foundry/records/starmap/pu/system/stanton/stanton4/starmapobject.stanton4.json",
    "availableDateSchedule": [],
    "onlyAvailableIfAllMissionsNotAvailable": [],
    "missionReward": {
      "_Type_": "MissionReward",
      "reward": 100000,
      "max": 0,
      "plusBonuses": false,
      "currencyType": "UEC",
      "reputationBonus": null
    },
    "partialRewardPayout": null,
    "missionResultReputationRewards": [
      {
        "_Type_": "SReputationAmountListParams",
        "reputationAmounts": []
      },
      {
        "_Type_": "SReputationAmountListParams",
        "reputationAmounts": []
      },
      {
        "_Type_": "SReputationAmountListParams",
        "reputationAmounts": []
      },
      {
        "_Type_": "SReputationAmountListParams",
        "reputationAmounts": []
      },
      {
        "_Type_": "SReputationAmountListParams",
        "reputationAmounts": []
      }
    ],
    "journalEntriesToAddOnComplete": [],
    "journalEntriesToRemoveOnComplete": [],
    "initiallyActive": true,
    "notifyOnAvailable": false,
    "preShowObjectives": false,
    "showAsOffer": false,
    "missionBuyInAmount": 0,
    "refundBuyInOnWithdraw": false,
    "hasCompleteButton": false,
    "onlyOwnerCanComplete": false,
    "handlesAbandonRequest": false,
    "missionModulePerPlayer": true,
    "maxInstances": 5,
    "maxPlayersPerInstance": 1,
    "maxInstancesPerPlayer": 1,
    "canBeShared": false,
    "onceOnly": false,
    "tutorial": false,
    "missionDeadline": {
      "_Type_": "MissionDeadline",
      "missionCompletionTime": 0,
      "missionAutoEnd": false,
      "missionResultAfterTimerEnd": "Failed",
      "remainingTimeToShowTimer": 0,
      "missionEndReason": "@LOC_EMPTY"
    },
    "displayAlliedMarkers": true,
    "availableInPrison": false,
    "failIfSentToPrison": true,
    "failIfBecameCriminal": false,
    "failIfLeavePrison": false,
    "completionTags": {
      "_Type_": "TagList",
      "tags": []
    },
    "applyCompletionTagsOnFailed": false,
    "applyCompletionTagsOnAbandoned": false,
    "requestOnly": false,
    "respawnTime": 0,
    "respawnTimeVariation": 0,
    "instanceHasLifeTime": true,
    "showLifeTimeInMobiGlas": false,
    "instanceLifeTime": 30,
    "instanceLifeTimeVariation": 0,
    "canReacceptAfterAbandoning": false,
    "abandonedCooldownTime": 1,
    "abandonedCooldownTimeVariation": 1,
    "canReacceptAfterFailing": false,
    "hasPersonalCooldown": false,
    "personalCooldownTime": 1,
    "personalCooldownTimeVariation": 1,
    "moduleHandlesOwnShutdown": false,
    "linkedMission": null,
    "missionCompletePerk": null,
    "modifiers": [],
    "lawfulMission": false,
    "missionGiverRecord": "file://./../../../../../../../libs/foundry/records/missiongiver/ruto.json",
    "invitationMission": null,
    "missionTags": [],
    "missionGiverFragmentTags": "",
    "reputationPrerequisites": {
      "_Type_": "ReputationPrerequisites",
      "wantedLevelJurisdictionOverride": null,
      "wantedLevel": {
        "_Type_": "ReputationPrerequisiteRange",
        "minValue": 0,
        "maxValue": 2
      }
    },
    "reputationRequirements": null,
    "minRequiredMissions": [],
    "requiredMissions": [],
    "requiredCompletedMissionTags": [],
    "requiredJournalEntries": [],
    "requiredAreaTags": {
      "_Type_": "TagList",
      "tags": []
    },
    "excludedAreaTags": {
      "_Type_": "TagList",
      "tags": []
    },
    "properties": [
      {
        "_Type_": "MissionProperty",
        "missionVariableName": "ItemsToCollect_BP",
        "extendedTextToken": "",
        "value": {
          "_Type_": "MissionPropertyValue_EntitySpawnDescriptions",
          "spawnDescriptions": [
            {
              "_Type_": "SpawnDescription_EntityGroup",
              "Name": "",
              "entities": [
                {
                  "_Type_": "SpawnDescription_EntityOptions",
                  "options": [
                    {
                      "_Type_": "SpawnDescription_Entity",
                      "tags": {
                        "_Type_": "TagList",
                        "tags": [
                          {
                            "_RecordPath_": "file://./../../../../../../../libs/foundry/records/tagdatabase/tagdatabase.tagdatabase.json",
                            "_RecordName_": "Tag.5fa565e3-fbc2-414b-87f2-e3f1efb2ae38",
                            "_RecordId_": "5fa565e3-fbc2-414b-87f2-e3f1efb2ae38"
                          }
                        ]
                      },
                      "negativeTags": {
                        "_Type_": "TagList",
                        "tags": []
                      },
                      "markupTags": {
                        "_Type_": "TagList",
                        "tags": []
                      },
                      "entityTags": {
                        "_Type_": "TagList",
                        "tags": []
                      },
                      "amount": 5,
                      "weight": 1
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    ],
    "objectiveTokens": [],
    "missionFlow": {
      "_Type_": "MissionFlow",
      "triggers": []
    }
  }
}